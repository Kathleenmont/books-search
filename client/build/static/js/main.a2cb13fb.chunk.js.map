{"version":3,"sources":["utils/API.js","components/ViewButton/index.js","components/DeleteButton/index.js","components/SearchCard/index.js","components/SearchButton/index.js","components/SearchBar/index.js","components/Jumbotron/index.js","pages/Search.js","pages/Saved.js","components/SearchResultsWrapper/index.js","components/Nav/index.js","pages/NoMatch.js","App.js","registerServiceWorker.js","index.js"],"names":["API","getBooks","query","axios","get","getSavedBooks","post","getBooksSaved","getBook","id","saveBook","bookData","console","log","deleteBook","delete","ViewButton","props","react_default","a","createElement","href","link","className","DeleteButton","_ref","data-id","onClick","SearchCard","alt","name","src","image","weight","title","author","description","saveButtonClick","viewable","components_ViewButton","components_DeleteButton","SearchButton","handleInputClick","e","SearchBar","handleInputChange","value","onChange","event","placeholder","Jumbotron","SearchResultsWrapper","children","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","books","search","authors","loadBooks","then","res","setState","data","items","discription","catch","err","loadBooksEvent","preventDefault","target","key","i","length","volumeInfo","imageLinks","thumbnail","infoLink","saved","bind","assertThisInitialized","_this2","components_Jumbotron","components_SearchBar","components_SearchButton","components_SearchResultsWrapper","map","book","components_SearchCard","Component","Saved","_id","Nav","NoMatch","App","react_router_dom","components_Nav","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a2cb13fb.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\n\nconst APIKEY = \":keyes&key=AIzaSyB3gUc9O6Z0fR929v3f2B3ahDTY5hYqG74\";\n\n// GET \"https://www.googleapis.com/books/v1/volumes?q=flowers+inauthor:keyes&key=yourAPIKey\"\n\nexport default {\n  getBooks: function(query) {\n    return axios.get(BASEURL + query + APIKEY);\n    //  return axios.get(\"/api/books\");\n  },\n\n  getSavedBooks: function() {\n    return axios.post();\n  },\n\n  // Gets all books\n  getBooksSaved: function() {\n    return axios.get(\"/api/books\");\n  },\n\n  // Gets the book with the given id\n  getBook: function(id) {\n    // console.log(\"inside /api/lskfj\")\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    console.log(bookData)\n    \n    return axios.post(\"/api/books\", bookData);\n  },\n\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  }\n \n};\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction ViewButton (props) {\n \n    return (\n        \n        <a href={props.link}><button className=\"btn btn-dark\" >View</button></a>\n        \n    )\n    \n}\n\nexport default ViewButton;","import React from \"react\";\nimport \"./style.css\";\n\nfunction DeleteButton ({id, deleteBook}) {\n \n    return (\n        \n       \n        <button data-id={id} onClick={() => {deleteBook(id)}} className=\"btn delete-button\" >Delete</button>\n        \n    )\n    \n}\n\nexport default DeleteButton;","import React from \"react\";\nimport \"./style.css\";\nimport ViewButton from \"../ViewButton\";\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport DeleteButton from \"../DeleteButton\";\n// import SaveButton from \"../SaveButton\";\n\nconst SearchCard = props => {\n\n  return (\n    <div className=\"container  search-card\">\n      <span href={props.link}>\n        <div className=\"row row\">\n          <div className=\"col-sm-3\">\n            <div className=\"card card-1\">\n              <div className=\"card-img text-center\">\n                <img\n                  alt={props.name}\n                  src={props.image}\n                  weight=\"200\"\n                  className=\"image\"\n                />\n              </div>\n            </div>\n          </div>\n        \n      \n          <div className=\"col-sm-8\">\n            <div className=\"card\">\n              <div className=\"card-body\" >\n                <div className=\"card-header text-center\">\n                <h4 className=\"card-title\">{props.title}</h4>\n                <p className=\"card-text\">{props.author}</p>\n                </div>\n              \n            \n            <p className=\"card-text\">{props.description}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-1\">\n            \n            <button data-id={props.id} onClick={() => {props.saveButtonClick(props.id)}} className=\"btn btn-dark save-btn\">Save</button> {/* <SaveButton data-id={props.id} key={props.key} SaveButtonClick={props.SaveButtonClick}/> */}\n            {props.viewable ? <ViewButton link={props.link}/> : <DeleteButton id={props.id} data-id={props.id} deleteBook={props.deleteBook}/>}\n          </div>\n          </div>\n      </span>\n    </div>\n  );\n};\n\nexport default SearchCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction SearchButton ({handleInputClick}) {\n \n    return (\n        \n       \n        <button className=\"btn btn-dark search-btn\" onClick={(e) => {handleInputClick(e)}}>Search</button>\n        \n    )\n    \n}\n\nexport default SearchButton;","import React from \"react\";\nimport \"./style.css\";\n\n\n\nfunction SearchBar ({handleInputChange, value}) {\n    \n  \n    return (\n        <div className=\"jumbotron bg-white search-div\">\n            <h3>Book Search</h3>\n           \n                <input className=\"form-control search-bar\" value={value} onChange={(event) => handleInputChange(event)} placeholder=\"Book Title\" ></input>\n   \n        </div>\n    )\n  \n}\n\nexport default SearchBar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron () {\n \n    return (\n        \n       <div className=\"jumbotron heading\">\n           <h1> Book Search </h1>\n           <h3> Search for and save books</h3>\n       </div>\n      \n        \n    )\n    \n}\n\nexport default Jumbotron;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport SearchCard from \"../components/SearchCard\";\nimport SearchButton from \"../components/SearchButton\";\nimport SearchBar from \"../components/SearchBar\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SearchResultsWrapper from \"../components/SearchResultsWrapper\";\nlet query;\n\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputClick = this.handleInputClick.bind(this);\n    this.loadBooksEvent = this.loadBooksEvent.bind(this);\n    this.loadBooks = this.loadBooks.bind(this);\n  }\n  state = {\n    books: [],\n    search: query,\n    title: \"\",\n    authors: [],\n    description: \"\",\n    image: \"\",\n    link: \"\"\n  };\n\n  // load inital books to page\n  componentDidMount() {\n    this.loadBooks();\n  \n  }\n  // get books and set state books to book array\n  loadBooks = () => {\n    API.getBooks(query)\n      .then(res =>\n        this.setState({\n          books: res.data.items,\n          search: query,\n          title: \"\",\n          authors: \"\",\n          discription: \"\",\n          image: \"\",\n          link: \"\"\n        })\n      )\n\n      .catch(err => console.log(err));\n  \n  };\n\n  // on click event for loading books\n  loadBooksEvent = e => {\n    console.log(\"in load books event\");\n    e.preventDefault();\n    this.loadBooks();\n  };\n\n  // click event for submit button\n  handleInputClick = e => {\n    e.preventDefault();\n    this.loadBooksEvent(e);\n  };\n\n  // OnChange event for search input \n  handleInputChange = e => {\n    // set query to the search value\n    query = e.target.value;\n    //  update query in state\n    this.setState({\n      search: query\n    });\n  };\n\n  // function for saving a book\n  saveButtonClick = key => {\n    let i;\n    // for loop to find book with the book id clicked. \n    for (i = 0; i < this.state.books.length; i++) {\n      if (key === this.state.books[i].id) {\n        // make an object\n        const newBook=\n        {\n          title: this.state.books[i].volumeInfo.title,\n          authors: this.state.books[i].volumeInfo.authors,\n          description: this.state.books[i].volumeInfo.description,\n          image: this.state.books[i].volumeInfo.imageLinks.thumbnail,\n          link: this.state.books[i].volumeInfo.infoLink,\n          saved: true\n        }\n        // pass the data to searver side/mongo and update\n        API.saveBook({\n          id: this.state.books[i].id,\n          title: this.state.books[i].volumeInfo.title,\n          authors: this.state.books[i].volumeInfo.authors,\n          description: this.state.books[i].volumeInfo.description,\n          image: this.state.books[i].volumeInfo.imageLinks.thumbnail,\n          link: this.state.books[i].volumeInfo.infoLink,\n          saved: true\n        })\n          .catch(err => console.log(err));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Jumbotron />\n        <form>\n          <SearchBar\n            value={this.state.query}\n            handleInputChange={this.handleInputChange}\n          />\n          <SearchButton\n            loadBooksEvent={this.loadBooksEvent}\n            handleInputClick={this.handleInputClick}\n          />\n        </form>\n        <SearchResultsWrapper>\n          <h4 className=\"text-light\">Search Page</h4>\n          {this.state.books.map(book => (\n            <SearchCard\n              saveButtonClick={this.saveButtonClick}\n              deleteBook={this.deleteBook}\n              key={book.id}\n              id={book.id}\n              title={book.volumeInfo.title}\n              author={book.volumeInfo.authors}\n              description={book.volumeInfo.description}\n              image={book.volumeInfo.imageLinks.thumbnail}\n              link={book.volumeInfo.infoLink}\n              saved={book.saved}\n              viewable\n            />\n          ))}\n        </SearchResultsWrapper>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport SearchCard from \"../components/SearchCard\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SearchResultsWrapper from \"../components/SearchResultsWrapper\";\nlet query;\n\n\nclass Saved extends Component {\n    \n      state = {\n        books: [],\n        search: query,\n        title: \"\",\n        authors: [],\n        description: \"\",\n        image: \"\",\n        link: \"\",\n        saved: true\n      };\n    \n      // loads saved books on page load\n      componentDidMount() {\n        this.loadBooks();\n     \n      }\n\n      // delete book function\n      deleteBook = id => {\n        API.deleteBook(id)\n          .then(res => this.loadBooks())\n          .catch(err => console.log(err));\n      };\n  \n      // function to load saved books\n      loadBooks = () => {\n        API.getBooksSaved()\n          .then(res =>\n            // sets state to saved books \n            this.setState({\n              books: res.data,\n              search: query,\n              title: \"\",\n              authors: \"\",\n              discription: \"\",\n              image: \"\",\n              link: \"\"\n           \n            })\n          )\n          .catch(err => console.log(err));\n        console.log(this.state.books);\n      };\n\n    render() {\n        return (\n            <div>\n              <Jumbotron />\n              <SearchResultsWrapper>\n          <h4 className=\"text-light\">Saved Books</h4>\n            {this.state.books.map(book => (\n              <SearchCard\n                key={book._id}\n                id={book._id}\n                title={book.title}\n                author={book.authors}\n                description={book.description}\n                image={book.image}\n                link={book.link}\n                saved={book.saved}\n                deleteBook={this.deleteBook}\n                \n              />\n            ))}\n             </SearchResultsWrapper>\n          </div>\n        )\n    }\n}\n\nexport default Saved;","import React from \"react\";\nimport \"./style.css\";\n\nconst SearchResultsWrapper = (props) => {\nreturn <div className=\"container container-fluid wrapper bg-dark\">{props.children}</div>\n}\n\nexport default SearchResultsWrapper;","import React from \"react\";\n\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">Search</a>\n      <a className=\"navbar-brand\" href=\"/saved\">Saved</a>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from \"react\";\n\n\nfunction NoMatch() {\n    return (\n        <h1>Page not found</h1>\n    )\n}\nexport default NoMatch;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport Nav from \"./components/Nav\";\nimport NoMatch from \"./pages/NoMatch\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Search} />\n            <Route exact path=\"/saved\" component={Saved} />\n            <Route component={NoMatch} />\n          </Switch>\n          \n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}